apiVersion: apps/v1
kind: Deployment
metadata:
  labels:
    app: cohosted
  name: cohosted
  namespace: grains
spec:
  progressDeadlineSeconds: 600
  replicas: 1
  revisionHistoryLimit: 10
  selector:
    matchLabels:
      app: cohosted
  strategy:
    rollingUpdate:
      maxSurge: 1
      maxUnavailable: 0
    type: RollingUpdate
  template:
    metadata:
      labels:
        orleans/clusterId: grains
        orleans/serviceId: cohosted
        app: cohosted
    spec:
      containers:
        - env:
          - name: ORLEANS_SERVICE_ID
            valueFrom:
              fieldRef:
                fieldPath: metadata.labels['orleans/serviceId']
          - name: ORLEANS_CLUSTER_ID
            valueFrom:
              fieldRef:
                fieldPath: metadata.labels['orleans/clusterId']
          - name: POD_NAMESPACE
            valueFrom:
              fieldRef:
                fieldPath: metadata.namespace
          - name: POD_NAME
            valueFrom:
              fieldRef:
                fieldPath: metadata.name
          - name: POD_IP
            valueFrom:
              fieldRef:
                fieldPath: status.podIP
          - name: IS_KUBERNETES_ORLEANS_HOSTING
            value: "true"
          envFrom:
            - configMapRef:
                name: general
            - configMapRef:
                name: cohosted
          image: image/image
          imagePullPolicy: IfNotPresent
          name: cohosted
          args:
            - dotnet
            - "CoHosted/CoHosted.dll"
          ports:
            - containerPort: 5001
              name: 5001tcp
              protocol: TCP
            - containerPort: 30002
              name: 30002tcp2
              protocol: TCP
            - containerPort: 11112
              name: 11112tcp2
              protocol: TCP
          readinessProbe:
            failureThreshold: 3
            httpGet:
              path: /health
              port: 5001
              scheme: HTTP
            initialDelaySeconds: 10
            periodSeconds: 2
            successThreshold: 2
            timeoutSeconds: 2
          resources: { }
          securityContext:
            allowPrivilegeEscalation: false
            capabilities: { }
            privileged: false
            readOnlyRootFilesystem: false
            runAsNonRoot: false
          stdin: true
          terminationMessagePath: /dev/termination-log
          terminationMessagePolicy: File
          tty: true
      dnsPolicy: ClusterFirst
      imagePullSecrets:
        - name: ???
      restartPolicy: Always
      schedulerName: default-scheduler
      securityContext: { }
      terminationGracePeriodSeconds: 30
---
apiVersion: v1
kind: Service
metadata:
  name: cohosted
  namespace: grains
spec:
  ports:
    - name: 5001tcp2-cohosted
      port: 5001
      protocol: TCP
      targetPort: 5001
    - name: 30002tcp2-selfthosted
      port: 30002
      protocol: TCP
      targetPort: 30002
    - name: 11112tcp2-cohosted
      port: 11112
      protocol: TCP
      targetPort: 11112
  selector:
    app: cohosted
  sessionAffinity: None
  type: ClusterIP
